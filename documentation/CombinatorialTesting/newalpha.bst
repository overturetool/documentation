%************************************************************************
%									*
%	The DiProGS Terminology and Bibliography style.			*
%									*
%	This style is based on the 'alpha' style, but many changes	*
%	have been made.							*
%									*
%	The 'key' is given explicit and not generated by the		*
%	program.							*
%	All bibliographic entries can have an annotation.		*
%	It is possible to output a terminology before the		*
%	the bibliography. See 'term'.					*
%	Entries are never (I hope) broken over pages.			*
%									*
%	The (use of) teh program is documented in:			*
%	"The Terminology and Bibliography Generating Programs",		*
%	Ole Frost Mikkelsen and Steen Lynenskjold, August 1987		*
%	(part of the DiProGS bibliography)				*
%									*
%									*
%	06.12.87  Ole Frost Mikkelsen					*
%									*
%************************************************************************

% 22.06.89
% Arguments := swapped ---- Erik T. Nielsen, Peter G. Larsen
% Argument "ll" to change.case changed to "l"
% 

% BibTeX standard bibliography style `alpha'
	% version 0.98c for BibTeX versions 0.98i or later, LaTeX version 2.08
	% Copyright (C) 1985, all rights reserved
	% Copying of this file is authorized only if either
	% (1) you make absolutely no changes to your copy, including name, or
	% (2) if you do make changes, you name it something other than
	% btxbst.doc, plain.bst, unsrt.bst, alpha.bst, and abbrv.bst
	% This restriction helps ensure that all standard styles are identical

ENTRY
  { address
    annote			% OFM 02.18.87
    author
    booktitle
    chapter
    edition
    editor
    howpublished
    institution
    journal
    key
    month
    note
    number
    organization
    pages
    publisher
    school
    series
    size
    title
    type
    volume
    year
    abbreviation
    definition
    provider
  }
  {}
  { label extra.label sort.label }

INTEGERS { output.state before.all mid.sentence after.sentence after.block }

STRINGS { longest.label last.sort.label next.extra }

INTEGERS { longest.label.width last.extra.num }

INTEGERS { termbib.state }
           % 0 before all
	   % 1 in terminology
	   % 2 in bibliography

FUNCTION {init.state.consts}
{ #0 'before.all :=
  #1 'mid.sentence :=
  #2 'after.sentence :=
  #3 'after.block :=
  #0 'termbib.state :=
}

STRINGS { s t }

FUNCTION {output.nonnull}
{ 's :=
  output.state mid.sentence =
    { ", " * write$ }
    { output.state after.block =
	{ add.period$ write$
	  newline$
	}
	{ output.state before.all =
	    'write$
	    { add.period$ " " * write$ }
	  if$
	}
      if$
    }
  if$
  mid.sentence 'output.state :=
  s
}

FUNCTION {output}
{ 's :=
  s "" =
    'skip$
    { s output.nonnull }
  if$
}

FUNCTION {output.check}
{ 's :=
  't :=
  s "" =
    { "Warning: the " t * " shouldn't be empty in " * cite$ * top$ }
    { s output.nonnull }
  if$
}

FUNCTION {output.bibitem}
{ termbib.state #2 =
    {}
    {termbib.state #1 =
       {newline$
        "\ethisterminology" write$
        newline$
       }
       {}
     if$
     newline$
     "\bthisbibliography {" longest.label "}" * * write$
     newline$
     #2 'termbib.state :=
    }
  if$
  newline$
  "\refitem {" write$
  label write$
  "}{" write$
  cite$ write$
  "}" write$
  newline$
  "\samepage" write$
  newline$
  ""
  before.all 'output.state :=
}

FUNCTION {fin.entry}
{ add.period$ write$
  size missing$
    {}
    { " " size "~pages." * * write$ }
  if$
  note missing$
    {}
    { " " note "." * * write$ }
  if$
  "%" write$
  newline$
  annote missing$
    {""}
    {annote}
  if$
  "" =
    { "Notice: There is no annotation to " cite$ * top$ }
    { "\nopagebreak" write$
      newline$
      newline$
      "\samepage" write$
      newline$
      annote "%" * write$
      newline$
    }
  if$
  "\pagebreak[3]" write$
  newline$
}

FUNCTION {new.block}
{ output.state before.all =
    'skip$
    { after.block 'output.state := }
  if$
}

FUNCTION {new.sentence}
{ output.state after.block =
    'skip$
    { output.state before.all =
	'skip$
	{ after.sentence 'output.state := }
      if$
    }
  if$
}

FUNCTION {not}
{   { #0 }
    { #1 }
  if$
}

FUNCTION {and}
{   'skip$
    { pop$ #0 }
  if$
}

FUNCTION {or}
{   { pop$ #1 }
    'skip$
  if$
}

FUNCTION {field.or.null}
{ duplicate$
  missing$
    { pop$ "" }
    'skip$
  if$
}

FUNCTION {italicize}
{ 's :=
  s "" =
    { "" }
    { "{\it " s * "}" * }
  if$
}

INTEGERS { nameptr namesleft numnames }

STRINGS {nameresult}

FUNCTION {format.names}
{ 						% OFM 02.18.87
}

FUNCTION {format.authors}
{ author missing$
    { "" }
    { author format.names }
  if$
}

FUNCTION {format.editors}
{ editor missing$
    { "" }
    { editor num.names$ #1 >
	{ editor format.names ", editors" * }
	{ editor format.names ", editor" * }
      if$
    }
  if$
}

FUNCTION {format.title}
{ title missing$
    { "" }
    { title }					% OFM 02.18.87
  if$
}

FUNCTION {entry.string.max} { #100 }

FUNCTION {global.string.max} { #500 }

% STRINGS {pageresult}

FUNCTION {n.dashify}
{  't :=
  "" 
    { t "" = not }
    { t #1 #1 substring$ "-" =
	{ t #1 #2 substring$ "--" = not
	    {  "--" * 
	       t #2 global.max$ substring$ 't :=
	    }
	    {   { t #1 #1 substring$ "-" = }
		{  "-" * 
		   t #2 global.max$ substring$ 't :=
		}
	      while$
	    }
	  if$
	}
	{  t #1 #1 substring$ * 
	   t #2 global.max$ substring$ 't :=
	}
      if$
    }
  while$
}

FUNCTION {format.date}
{ year missing$
    { month missing$
	{ "" }
	{ "Warning: there's a month but no year in " cite$ * top$
	  month
	}
      if$
    }
    { month missing$
	{ year }
	{ month " " * year * }
      if$
    }
  if$
}

FUNCTION {format.btitle}
{ title field.or.null
  italicize
}

FUNCTION {format.bvolume}
{ volume missing$
    { series missing$
	{ "" }
	{ series italicize }
      if$
    }
    { "Volume~" volume *
      series missing$
	'skip$
	{ " of " * series italicize * }
      if$
    }
  if$
}

FUNCTION {format.edition}
{ edition missing$
    { "" }
    { edition "l" change.case$ " edition" * }
  if$
}

INTEGERS {multiresult}

FUNCTION {multi.page.check}
{  't :=
  #0 'multiresult :=
    { multiresult not
      t "" = not
      and
    }
    { t #1 #1 substring$ "-" =
      t #1 #1 substring$ "," =
      or
	{ #1 'multiresult := }
	{ t #2 global.max$ substring$ 't := }
      if$
    }
  while$
  multiresult
}

FUNCTION {format.pages}
{ pages missing$
    { "" }
    { pages multi.page.check
	{ "pages~" pages n.dashify * }
	{ "page~" pages n.dashify * }
      if$
    }
  if$
}

FUNCTION {format.vol.num.pages}
{ volume field.or.null
  number missing$
    'skip$
    { "(" number * ")" * *
      volume missing$
	{ "Warning: there's a number but no volume in " cite$ * top$ }
	'skip$
      if$
    }
  if$
  pages missing$
    'skip$
    { duplicate$ "" =
	'skip$
	{ ":" * }
      if$
      pages n.dashify *
    }
  if$
}

FUNCTION {format.chapter.pages}
{ chapter missing$
    'format.pages
    { "chapter~" chapter *
      pages missing$
	'skip$
	{ ", " * format.pages * }
      if$
    }
  if$
}

FUNCTION {format.in.ed.booktitle}
{ booktitle missing$
    { "" }
    { format.editors 's :=
      s "" =
	{ "In " booktitle italicize * }
	{ "In " s * ", " * booktitle italicize * }
      if$
    }
  if$
}

FUNCTION {format.tr.number}
{ type missing$
    { "Technical Report" }
    { type }
  if$
  number missing$
    'skip$
    { "~" * number * }
  if$
}


FUNCTION {article}
{ output.bibitem
  "author" format.authors output.check
  new.block
  "title" format.title output.check
  new.block
  "journal" journal field.or.null italicize output.check
  format.vol.num.pages output
  "year" format.date output.check
  fin.entry
}

FUNCTION {book}
{ output.bibitem
  author missing$
    { "author and editor" format.editors output.check }
    { "author" format.authors output.check }
  if$
  new.block
  "title" format.btitle output.check
  new.block
  format.bvolume output
  "publisher" publisher field.or.null output.check
  address field.or.null output
  format.edition output
  "year" format.date output.check
  fin.entry
}

FUNCTION {booklet}
{ output.bibitem
  format.authors output
  new.block
  "title" format.btitle output.check
  new.block
  howpublished field.or.null output
  address field.or.null output
  format.date output
  fin.entry
}

FUNCTION {inbook}
{ output.bibitem
  author missing$
    { "author and editor" format.editors output.check }
    { "author" format.authors output.check }
  if$
  new.block
  "title" format.btitle output.check
  "chapter and pages" format.chapter.pages output.check
  new.block
  format.bvolume output
  "publisher" publisher field.or.null output.check
  address field.or.null output
  format.edition output
  "year" format.date output.check
  fin.entry
}

FUNCTION {incollection}
{ output.bibitem
  "authors" format.authors output.check
  new.block
  "title" format.title output.check
  new.block
  "booktitle" format.in.ed.booktitle output.check
  format.chapter.pages output
  "publisher" publisher field.or.null output.check
  address field.or.null output
  "year" format.date output.check
  fin.entry
}

FUNCTION {inproceedings}
{ output.bibitem
  "author" format.authors output.check
  new.block
  "title" format.title output.check
  new.block
  "booktitle" format.in.ed.booktitle output.check
  format.pages output
  organization field.or.null output
  publisher field.or.null output
  address field.or.null output
  "year" format.date output.check
  fin.entry
}

FUNCTION {conference} { inproceedings }

FUNCTION {manual}
{ output.bibitem
  format.authors output
  new.block
  "title" format.btitle output.check
  new.block
  organization field.or.null output
  address field.or.null output
  format.edition output
  format.date output
  fin.entry
}

FUNCTION {mastersthesis}
{ output.bibitem
  "author" format.authors output.check
  new.block
  "title" format.btitle output.check
  new.block
  "Master's thesis" output
  format.pages output				% OFM 03.12.87
  "school" school field.or.null output.check
  address field.or.null output
  "year" format.date output.check
  fin.entry
}

FUNCTION {misc}
{ output.bibitem
  format.authors output
  new.block
  format.title output
  new.block
  howpublished field.or.null output
  format.date output
  fin.entry
}

FUNCTION {phdthesis}
{ output.bibitem
  "author" format.authors output.check
  new.block
  "title" format.btitle output.check
  new.block
  "PhD thesis" output
  "school" school field.or.null output.check
  address field.or.null output
  "year" format.date output.check
  fin.entry
}

FUNCTION {proceedings}
{ output.bibitem
  editor missing$
    { organization missing$
	'skip$
	{ organization field.or.null output }
      if$
    }
    { format.editors output }
  if$
  new.block
  "title" format.btitle output.check
  editor missing$
    'skip$
    { organization field.or.null output }
  if$
  publisher field.or.null output
  address field.or.null output
  "year" format.date output.check
  fin.entry
}

FUNCTION {techreport}
{ output.bibitem
  "author" format.authors output.check
  new.block
  "title" format.btitle output.check
  new.block
  format.tr.number output
  "institution" institution field.or.null output.check
  address field.or.null output
  "year" format.date output.check
  fin.entry
}

FUNCTION {unpublished}
{ output.bibitem
  "author" format.authors output.check
  new.block
  "title" format.btitle output.check
  new.block
  format.date output
  fin.entry
}

FUNCTION {term}
{ termbib.state #1 =
    {}
    {newline$
     "\bthisterminology {" longest.label "}" * * write$
     newline$
     #1 'termbib.state :=
    }
  if$
  newline$
  abbreviation missing$
    {""}
    {abbreviation}
  if$
  "" =
    {"\termitem {"}
    {"\termitemabbr {"}
  if$
  key missing$
    {"**********"}
    {key}
  if$
  "}" * * write$
  "{" 
  abbreviation missing$
    {""}
    {abbreviation}
  if$
  "}%" * * write$
  newline$
  "{" cite$ "}" * * write$
  "{" 
  provider missing$
    {""}
    {provider}
  if$
  "}" * * write$
  newline$
  "\samepage" write$
  newline$
  definition missing$
    {"Warning: There is no DEFINITION of the term " cite$ * top$
     ""}
    {definition}
  if$
  "%" * write$
  newline$
  "\pagebreak[3]" write$
  newline$
}

FUNCTION {default.type} { book }

MACRO {jan} {"January"}

MACRO {feb} {"February"}

MACRO {mar} {"March"}

MACRO {apr} {"April"}

MACRO {may} {"May"}

MACRO {jun} {"June"}

MACRO {jul} {"July"}

MACRO {aug} {"August"}

MACRO {sep} {"September"}

MACRO {oct} {"October"}

MACRO {nov} {"November"}

MACRO {dec} {"December"}

MACRO {acmcs} {"ACM Computing Surveys"}

MACRO {acta} {"Acta Informatica"}

MACRO {cacm} {"Communications of the ACM"}

MACRO {ibmjrd} {"IBM Journal of Research and Development"}

MACRO {ibmsj} {"IBM Systems Journal"}

MACRO {ieeese} {"IEEE Transactions on Software Engineering"}

MACRO {ieeetc} {"IEEE Transactions on Computers"}

MACRO {ieeetcad}
 {"IEEE Transactions on Computer-Aided Design of Integrated Circuits"}

MACRO {ipl} {"Information Processing Letters"}

MACRO {jacm} {"Journal of the ACM"}

MACRO {jcss} {"Journal of Computer and System Sciences"}

MACRO {scp} {"Science of Computer Programming"}

MACRO {sicomp} {"SIAM Journal on Computing"}

MACRO {tocs} {"ACM Transactions on Computer Systems"}

MACRO {tods} {"ACM Transactions on Database Systems"}

MACRO {tog} {"ACM Transactions on Graphics"}

MACRO {toms} {"ACM Transactions on Mathematical Software"}

MACRO {toois} {"ACM Transactions on Office Information Systems"}

MACRO {toplas} {"ACM Transactions on Programming Languages and Systems"}

MACRO {tcs} {"Theoretical Computer Science"}

READ

FUNCTION {sortify}
{ purify$
  "l" change.case$
}

FUNCTION {format.lab.names}
{						% OFM 02.19.87
}

FUNCTION {calc.label}
{ definition missing$
    {""}
    {"AAA"}
  if$
  key missing$					% OFM 02.18.87
    {""}
    {key}
  if$
  "" =
    {"Warning: The KEY shouldn't be empty in " cite$ * top$
     "*******"
    }
    {key}
  if$
  *
  'label
  :=
  label sortify 'sort.label :=
}

FUNCTION {sort.format.names}
{						% OFM 02.18.87
}

INTEGERS {len}

FUNCTION {chop.word}
{ 's :=
   'len :=
  s #1 len substring$ =
    { s len #1 + global.max$ substring$ }
    { s }
  if$
}

FUNCTION {sort.format.title}
{  't :=
  "A " #2
    "An " #3
      "The " #4 t chop.word
    chop.word
  chop.word
  #1 global.max$ substring$
  sortify
}

FUNCTION {presort}
{
  calc.label
  sort.label
  						% OFM 02.19.87
  #1 entry.max$ substring$
   'sort.key$ :=
}

ITERATE {presort}

SORT

FUNCTION {initialize.longest.label}
{ "XXXX" 'longest.label :=
  "" 'last.sort.label :=
  "" 'next.extra :=
  #4 'longest.label.width :=
  #0 'last.extra.num :=
}

FUNCTION {forward.pass}
{ last.sort.label sort.label =
    { last.extra.num #1 + 'last.extra.num :=
      last.extra.num int.to.chr$ 'extra.label :=
    }
    { "a" chr.to.int$ 'last.extra.num  :=
      "" 'extra.label :=
      sort.label 'last.sort.label :=
    }
  if$
}

FUNCTION {reverse.pass}
{ next.extra "b" =
    { "a" 'extra.label := }
    'skip$
  if$
  label extra.label * 'label :=
  label width$ longest.label.width >
    {definition missing$
       { label 'longest.label :=
         label width$ 'longest.label.width :=
       }
       {}
     if$
     }
    {}
  if$
  extra.label 'next.extra :=
}

EXECUTE {initialize.longest.label}

ITERATE {forward.pass}

REVERSE {reverse.pass}


EXECUTE {init.state.consts}

ITERATE {call.type$}

FUNCTION {finish.up} 
{ termbib.state #0 =
    {}
    {termbib.state #1 =
       {newline$
        "\ethisterminology" write$
        newline$
       }
       {newline$
        "\ethisbibliography" write$
        newline$
       }
     if$
    }
  if$
}

EXECUTE {finish.up}
