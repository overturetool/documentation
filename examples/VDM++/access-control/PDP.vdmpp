class PDP 

instance variables 

policies : set of Policy;
policyCombAlg : CombAlg; 

operations

public PDP: set of Policy * CombAlg  ==> PDP
PDP(ps,pca) == 
 (policies := ps;
  policyCombAlg := pca
 );

types

public Permit = token;
public Deny = token;
public Null = token;
 
public CombAlg = <denyOverrides> | <permitOverrides>;
 
public Policy :: target : [Target]
                  rules : set of Rule
            ruleCombAlg : CombAlg;
 
public Rule :: target : [Target]  
               effect : Effect
                 cond : [FExp];

public Effect = <Permit> | <Deny> | <Indeterminate> | <NotApplicable>;   
              
public Target :: subjects : set of Subject
                resources : set of Resource
                  actions : set of Action;

public Action = FExp`Id;
public Subject = FExp`Id;
public Resource = FExp`Id;

operations

pure public GetpolicyCombAlg: () ==> CombAlg
GetpolicyCombAlg() ==
  return policyCombAlg;

pure public Getpolicies: () ==> set of Policy
Getpolicies() ==
  return policies;

pure public GetEffect: Rule ==> Effect
GetEffect(r) ==
  return r.effect;

end PDP